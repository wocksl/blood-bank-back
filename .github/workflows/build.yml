name: Build Docker Image

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: backend

jobs:
  build:
    name: Build and Scan Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Run Dockle Security Scan
      continue-on-error: true
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock goodwithtech/dockle $ECR_REPOSITORY:${{ env.IMAGE_TAG }}

    - name: Run Trivy Vulnerability Scan
      uses: aquasecurity/trivy-action@0.20.0
      continue-on-error: true
      with:
        image-ref: '${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy Scan Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif

    - name: Push Docker Image to Amazon ECR
      if: success()
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_URI=${{ steps.push.outputs.image }}" >> $GITHUB_ENV
